{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\Info.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Table, Link, DropdownButton, Dropdown } from \"react-bootstrap\";\n\n/**\r\n * Component to display user information\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  _s();\n  const api = \"http://127.0.0.1:3001\";\n  const [users, setUsers] = useState([]); // State variable to store user data\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\n\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      // Send GET request to /users endpoint to retrieve user data\n      setUsers(res.data); // Update state variable with retrieved data\n    });\n  }, []);\n\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\n  const handleTypeSelect = type => {\n    setSelectedType(type); // Update state variable with the selected user type\n  };\n\n  const filteredUsers = selectedType === \"all\" ? users : users.filter(user => user.type === selectedType); // Filter user data based on selected user type\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: `Filter by Type: ${selectedType}`,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Student\"),\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Graduate\"),\n            children: \"Graduate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Employed\"),\n            children: \"Employed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredUsers.map((_ref, index) => {\n            let {\n              _id,\n              name,\n              phone,\n              email,\n              type,\n              imageUrl\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: imageUrl &&\n                /*#__PURE__*/\n                // If user has an image URL, render a link to the image\n                _jsxDEV(Link, {\n                  to: `/image/${index}`,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imageUrl,\n                    alt: name,\n                    width: \"100\",\n                    height: \"100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, _id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Info, \"A8Ng5g0tWR73KfbHi1bOj05b4Fk=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Table","Link","DropdownButton","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","_s","api","users","setUsers","selectedType","setSelectedType","get","then","res","data","handleTypeSelect","type","filteredUsers","filter","user","children","className","id","title","Item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","_ref","index","_id","name","phone","email","imageUrl","to","src","alt","width","height","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/Info.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Link,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/**\r\n * Component to display user information\r\n */\r\nexport default function Info() {\r\n  const api = \"http://127.0.0.1:3001\";\r\n\r\n  const [users, setUsers] = useState([]); // State variable to store user data\r\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${api}/users`).then((res) => {\r\n      // Send GET request to /users endpoint to retrieve user data\r\n      setUsers(res.data); // Update state variable with retrieved data\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\r\n  const handleTypeSelect = (type) => {\r\n    setSelectedType(type); // Update state variable with the selected user type\r\n  };\r\n\r\n  const filteredUsers =\r\n    selectedType === \"all\"\r\n      ? users\r\n      : users.filter((user) => user.type === selectedType); // Filter user data based on selected user type\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Dropdown menu to filter users by type */}\r\n        <div className=\"my-3 d-flex justify-content-end\">\r\n          <DropdownButton\r\n            id=\"dropdown-basic-button\"\r\n            title={`Filter by Type: ${selectedType}`}\r\n          >\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Student\")}>\r\n              Student\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Graduate\")}>\r\n              Graduate\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Employed\")}>\r\n              Employed\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </div>\r\n\r\n        {/* Table to display user information */}\r\n        <Table striped bordered hover className=\"my-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Type</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map((\r\n              { _id, name, phone, email, type, imageUrl },\r\n              index\r\n            ) => (\r\n              <tr key={_id}>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n                <td>{type}</td>\r\n                <td>\r\n                  {imageUrl && (\r\n                    // If user has an image URL, render a link to the image\r\n                    <Link to={`/image/${index}`}>\r\n                      <img src={imageUrl} alt={name} width=\"100\" height=\"100\" />\r\n                    </Link>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}