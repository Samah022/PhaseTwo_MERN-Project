{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // URL of the API that this application will use\n  const api = \"http://127.0.0.1:3001\";\n\n  // Set up state variables to hold user data\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [employeeType, setEmployeeType] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [yearOfGraduate, setYearOfGraduate] = useState(\"\");\n\n  // Use the useEffect hook to fetch user data when the component mounts\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      setUsers(res.data);\n    });\n  }, []);\n\n  /*\n  * Handle form submission and create a new user\n  * @param e - Form submit event object\n  */\n  const createUser = e => {\n    e.preventDefault();\n\n    // Check if a user with that email already exists\n    const existingUser = users.find(user => user.email === email);\n    if (existingUser) {\n      alert(\"A user with that email already exists\");\n      return;\n    }\n    if (name && phone && email) {\n      // Create a new FormData object to hold the form data\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"phone\", phone);\n      formData.append(\"email\", email);\n      formData.append(\"password\", password);\n      formData.append(\"type\", type);\n      if (type === \"student\") {\n        formData.append(\"category\", category);\n      } else if (type === \"employee\") {\n        formData.append(\"employeeType\", employeeType);\n      } else if (type === \"graduate\") {\n        formData.append(\"yearOfGraduate\", yearOfGraduate);\n      }\n      formData.append(\"image\", image);\n\n      // Use Axios to make a POST request to the API with the form data\n      Axios.post(`${api}/createUser`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        // Update the users state variable with the new user data\n        setUsers([...users, res.data]);\n        // Reset the form inputs\n        setName(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setPassword(\"\");\n        setType(\"\");\n        setCategory(\"\");\n        setEmployeeType(\"\");\n        setImage(\"\");\n        setYearOfGraduate(\"\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n  /*----------------------------------Phone-------------------------------------*/\n  /*\n  * Format the phone number as (XXX) XXX-XXXX\n  * @param phone - the phone number to format\n  * @returns a formatted phone number string\n  */\n  const formatPhoneNumber = phone => {\n    const cleaned = ('' + phone).replace(/\\D/g, '');\n    const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    return match ? +match[1] + match[2] + match[3] : phone;\n  };\n\n  /*\n  * Handle phone input change and format the phone number\n  * @param e - Input change event object\n  */\n  const handlePhoneChange = e => {\n    const input = e.target.value.replace(/\\D/g, '');\n    if (input.length <= 10) {\n      setPhone(formatPhoneNumber(input));\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  /*----------------------------------Email-------------------------------------*/\n  /*\n  * Validate email address format\n  * @param email - the email address to validate\n  * @returns true if the email address is valid, false otherwise\n  */\n  const validateEmail = email => {\n    const re = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    return re.test(String(email).toLowerCase());\n  };\n\n  /*\n  * Handle email input change and validate the email address\n  * @param e - Input change event object\n  */\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    if (!validateEmail(e.target.value)) {\n      e.target.setCustomValidity('Please enter a valid email address');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  /*----------------------------------Password-------------------------------------*/\n  /*\n  * Validate password format\n  * @param password - the password to validate\n  * @returns true if the password is valid, false otherwise\n  */\n  const validatePassword = password => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    return re.test(String(password));\n  };\n\n  /*\n  * Handle password input change and validate the password\n  * @param e - Input change event object\n  */\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (!validatePassword(e.target.value)) {\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  /*----------------------------------Type-------------------------------------*/\n  /*\n  * Handle select type change and reset the category, employee type, and year of graduate inputs\n  * @param e - Input change event object\n  */\n  const handleTypeChange = e => {\n    setType(e.target.value);\n    setCategory(\"\");\n    setEmployeeType(\"\");\n    setYearOfGraduate(\"\");\n  };\n\n  /*\n  * Handle select category change\n  * @param e - Input change event object\n  */\n  const handleCategoryChange = e => {\n    setCategory(e.target.value);\n  };\n\n  /*\n  * Handle select employee type change\n  * @param e - Input change event object\n  */\n  const handleEmployeeTypeChange = e => {\n    setEmployeeType(e.target.value);\n  };\n  /*---------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/app\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        onSubmit: createUser,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-black\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: phone,\n          onChange: handlePhoneChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: type,\n            onChange: handleTypeChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"graduate\",\n              children: \"Graduate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), type === \"student\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: category,\n            onChange: handleCategoryChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high School\",\n              children: \"High School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"university\",\n              children: \"University\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), type === \"employee\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: employeeType,\n            onChange: handleEmployeeTypeChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select employee type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"full-time\",\n              children: \"Full-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"part-time\",\n              children: \"Part-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"freelancer\",\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), type === \"graduate\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: yearOfGraduate,\n            onChange: date => setYearOfGraduate(date),\n            dateFormat: \"dd-MM-yyyy\",\n            placeholderText: \"Select year of graduate\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => setImage(e.target.files[0]),\n            accept: \"image/*\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"cjjAEk3keYMlqLNVqRFGmEVuhAE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Form","Button","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","api","users","setUsers","name","setName","email","setEmail","phone","setPhone","password","setPassword","type","setType","category","setCategory","employeeType","setEmployeeType","image","setImage","yearOfGraduate","setYearOfGraduate","get","then","res","data","createUser","e","preventDefault","existingUser","find","user","alert","formData","FormData","append","post","headers","catch","error","console","log","formatPhoneNumber","cleaned","replace","match","handlePhoneChange","input","target","value","length","validateEmail","re","test","String","toLowerCase","handleEmailChange","setCustomValidity","validatePassword","handlePasswordChange","handleTypeChange","handleCategoryChange","handleEmployeeTypeChange","children","href","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","Control","placeholder","onChange","required","Group","as","selected","date","dateFormat","placeholderText","controlId","files","accept","variant","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Container,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport default function App() {\n\n  // URL of the API that this application will use\n  const api = \"http://127.0.0.1:3001\";\n\n  // Set up state variables to hold user data\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [employeeType, setEmployeeType] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [yearOfGraduate, setYearOfGraduate] = useState(\"\");\n\n  // Use the useEffect hook to fetch user data when the component mounts\n  useEffect(() => {\n    Axios.get(`${api}/users`).then((res) => {\n      setUsers(res.data);\n    });\n  }, []);\n\n  /*\n  * Handle form submission and create a new user\n  * @param e - Form submit event object\n  */\n  const createUser = (e) => {\n    e.preventDefault();\n\n    // Check if a user with that email already exists\n  const existingUser = users.find(user => user.email === email);\n  if (existingUser) {\n    alert(\"A user with that email already exists\");\n    return;\n  }\n    if (name && phone && email) {\n      // Create a new FormData object to hold the form data\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"phone\", phone);\n      formData.append(\"email\", email);\n      formData.append(\"password\", password);\n      formData.append(\"type\", type);\n      if (type === \"student\") {\n        formData.append(\"category\", category);\n      } else if (type === \"employee\") {\n        formData.append(\"employeeType\", employeeType);\n      } else if (type === \"graduate\") {\n        formData.append(\"yearOfGraduate\", yearOfGraduate);\n      }\n      formData.append(\"image\", image);\n  \n      // Use Axios to make a POST request to the API with the form data\n      Axios.post(`${api}/createUser`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n        .then((res) => {\n          // Update the users state variable with the new user data\n          setUsers([...users, res.data]);\n          // Reset the form inputs\n          setName(\"\");\n          setEmail(\"\");\n          setPhone(\"\");\n          setPassword(\"\");\n          setType(\"\");\n          setCategory(\"\");\n          setEmployeeType(\"\");\n          setImage(\"\");\n          setYearOfGraduate(\"\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n/*----------------------------------Phone-------------------------------------*/\n  /*\n  * Format the phone number as (XXX) XXX-XXXX\n  * @param phone - the phone number to format\n  * @returns a formatted phone number string\n  */\n  const formatPhoneNumber = (phone) => {\n    const cleaned = ('' + phone).replace(/\\D/g, '');\n    const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    return match ?  + match[1] + match[2] + match[3] : phone;\n  }\n\n  /*\n  * Handle phone input change and format the phone number\n  * @param e - Input change event object\n  */\n  const handlePhoneChange = (e) => {\n    const input = e.target.value.replace(/\\D/g, '');\n    if (input.length <= 10) {\n      setPhone(formatPhoneNumber(input));\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n/*----------------------------------Email-------------------------------------*/\n  /*\n  * Validate email address format\n  * @param email - the email address to validate\n  * @returns true if the email address is valid, false otherwise\n  */\n  const validateEmail = (email) => {\n    const re = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    return re.test(String(email).toLowerCase());\n  }\n\n  /*\n  * Handle email input change and validate the email address\n  * @param e - Input change event object\n  */\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n    if (!validateEmail(e.target.value)) {\n      e.target.setCustomValidity('Please enter a valid email address');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n/*----------------------------------Password-------------------------------------*/\n  /*\n  * Validate password format\n  * @param password - the password to validate\n  * @returns true if the password is valid, false otherwise\n  */\n  const validatePassword = (password) => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    return re.test(String(password));\n  }\n\n  /*\n  * Handle password input change and validate the password\n  * @param e - Input change event object\n  */\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    if (!validatePassword(e.target.value)) {\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n/*----------------------------------Type-------------------------------------*/\n  /*\n  * Handle select type change and reset the category, employee type, and year of graduate inputs\n  * @param e - Input change event object\n  */\n  const handleTypeChange = (e) => {\n    setType(e.target.value);\n    setCategory(\"\");\n    setEmployeeType(\"\");\n    setYearOfGraduate(\"\");\n  }\n\n  /*\n  * Handle select category change\n  * @param e - Input change event object\n  */\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n  }\n\n  /*\n  * Handle select employee type change\n  * @param e - Input change event object\n  */\n  const handleEmployeeTypeChange = (e) => {\n    setEmployeeType(e.target.value);\n  }\n/*---------------------------------------------------------------------------*/\n\n  return (\n    <>\n      {/* Header section with navigation links */}\n      <header>\n      <nav>\n          <ul>\n            <li>\n              <a href=\"/\">Home</a>\n            </li>\n            <li>\n              <a href=\"/app\">User</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      {/* Main content section with form to create new user */}\n      <Container>\n        <Form className=\"form\" onSubmit={createUser}>\n        <h2 className=\"text-black\">Create User</h2>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Phone\"\n            value={phone}\n            onChange={handlePhoneChange}\n            required\n          />\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleEmailChange}\n            required\n          />\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n          />\n        <Form.Group>\n          <Form.Control as=\"select\" value={type} onChange={handleTypeChange} required>\n            <option value=\"\">Select type</option>\n            <option value=\"student\">Student</option>\n            <option value=\"employee\">Employee</option>\n            <option value=\"graduate\">Graduate</option>\n          </Form.Control>\n        </Form.Group>\n        {type === \"student\" &&\n          <Form.Group>\n            <Form.Control as=\"select\" value={category} onChange={handleCategoryChange} required>\n              <option value=\"\">Select category</option>\n              <option value=\"high School\">High School</option>\n              <option value=\"university\">University</option>\n            </Form.Control>\n          </Form.Group>\n        }\n        {type === \"employee\" &&\n          <Form.Group>\n            <Form.Control as=\"select\" value={employeeType} onChange={handleEmployeeTypeChange} required>\n              <option value=\"\">Select employee type</option>\n              <option value=\"full-time\">Full-time</option>\n              <option value=\"part-time\">Part-time</option>\n              <option value=\"freelancer\">Freelancer</option>\n            </Form.Control>\n          </Form.Group>\n        }\n        {type === \"graduate\" && (\n          <Form.Group>\n            <DatePicker\n              selected={yearOfGraduate}\n              onChange={(date) => setYearOfGraduate(date)}\n              dateFormat=\"dd-MM-yyyy\"\n              placeholderText=\"Select year of graduate\"\n              required\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group controlId=\"image\" >\n          <Form.Control type=\"file\" onChange={(e) => setImage(e.target.files[0])} accept=\"image/*\" required/>\n        </Form.Group>\n\n          <Button variant=\"success\" type=\"submit\">\n            Create User\n          </Button>\n        </Form>\n      </Container>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}