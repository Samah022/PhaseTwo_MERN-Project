{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\Info.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Table, Button, DropdownButton, Dropdown, Form } from \"react-bootstrap\";\nimport moment from 'moment';\n\n/**\r\n * Component to display user information\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  _s();\n  const api = \"http://127.0.0.1:3001\";\n  const [users, setUsers] = useState([]); // State variable to store user data\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\n  const [selectedUsers, setSelectedUsers] = useState([]); // State variable to store the currently selected users to delete\n  const [selectedUser, setSelectedUser] = useState(null); // State variable to store the ID of the user being edited\n  const [editName, setEditName] = useState(\"\");\n  const [editEmail, setEditEmail] = useState(\"\");\n  const [editPhone, setEditPhone] = useState(\"\");\n  const [editType, setEditType] = useState(\"\");\n  const [editCategory, setEditCategory] = useState(\"\");\n  const [editEmployeeType, setEditEmployeeType] = useState(\"\");\n  const [editYearOfGraduate, setEditYearOfGraduate] = useState(\"\");\n  const [editImage, setEditImage] = useState(null);\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      // Send GET request to /users endpoint to retrieve user data\n      setUsers(res.data); // Update state variable with retrieved data\n    });\n  }, []);\n\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\n  const openImage = image => {\n    window.open(image, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\n  };\n\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\n  const handleTypeSelect = type => {\n    setSelectedType(type); // Update state variable with the selected user type\n  };\n\n  /**\r\n   * Function to handle checkbox selection\r\n   * @param id - ID of the user to select or deselect\r\n   */\n  const handleCheckboxSelect = id => {\n    if (selectedUsers.includes(id)) {\n      setSelectedUsers(selectedUsers.filter(userId => userId !== id)); // remove user from the selected users array if it is already selected\n    } else {\n      setSelectedUsers([...selectedUsers, id]); // add user to the selected users array if it is not already selected\n    }\n  };\n\n  const filteredUsers = selectedType === \"all\" ? users : users.filter(user => user.type === selectedType); // Filter user data based on selected user type\n\n  /**\r\n   * Function to delete selected users from the table and the database\r\n   */\n  const deleteSelectedUsers = () => {\n    Axios.delete(`${api}/users`, {\n      data: {\n        ids: selectedUsers\n      }\n    }).then(res => {\n      // Send DELETE request to /users endpoint to delete selected users from the database\n      setUsers(users.filter(user => !selectedUsers.includes(user._id))); // Update state variable with updated user data after deletion\n      setSelectedUsers([]);\n    });\n  };\n\n  /**\r\n   * Function to handle editing user information\r\n   * @param id - ID of the user being edited\r\n   */\n  const handleEdit = id => {\n    setSelectedUser(id); // Set the ID of the user being edited\n    const user = users.find(user => user._id === id); // Find the user data for the selected user\n    setEditName(user.name);\n    setEditEmail(user.email);\n    setEditPhone(user.phone);\n    setEditType(user.type);\n    setEditCategory(user.category);\n    setEditEmployeeType(user.employeeType);\n    setEditYearOfGraduate(moment(user.date).format('MM/DD/YYYY'));\n    setEditImage(null);\n  };\n\n  /**\r\n   * Function to handle selecting a new image file\r\n   * @param e - Input change event\r\n   */\n  const handleImageSelect = e => {\n    setEditImage(e.target.files[0]); // Set the new image file in the state variable\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", editName);\n    formData.append(\"email\", editEmail);\n    formData.append(\"phone\", editPhone);\n    formData.append(\"type\", editType);\n\n    // Check if the value of editCategory is a valid enum value  \n    if ([\"high School\", \"university\"].includes(editCategory)) {\n      formData.append(\"category\", editCategory);\n    } else {\n      // If the value is not a valid enum value, set the category field to null    \n      formData.append(\"category\", null);\n    }\n\n    // Check if the value of editEmployeeType is a valid enum value\n    if ([\"full-time\", \"part-time\", \"freelancer\"].includes(editEmployeeType)) {\n      formData.append(\"employeeType\", editEmployeeType);\n    } else {\n      // If the value is not a valid enum value, set the employeeType field to null   \n      formData.append(\"employeeType\", null);\n    }\n    if (editYearOfGraduate) {\n      formData.append(\"yearOfGraduate\", editYearOfGraduate);\n    }\n    if (editImage) {\n      formData.append(\"image\", editImage);\n    }\n    Axios.put(`${api}/users`, {\n      userId: selectedUser,\n      name: editName,\n      email: editEmail,\n      phone: editPhone,\n      type: editType,\n      category: editCategory,\n      employeeType: editEmployeeType,\n      yearOfGraduate: editYearOfGraduate,\n      image: editImage\n    }).then(res => {\n      const updatedUser = res.data;\n      const index = users.findIndex(user => user._id === updatedUser._id);\n      updatedUsers[index] = updatedUser;\n      setUsers(updatedUsers);\n      const updatedUsers = users.map(user => {\n        if (user._id === updatedUser._id) {\n          return updatedUser;\n        } else {\n          return user;\n        }\n      });\n      setUsers(updatedUsers);\n      setSelectedUser(null);\n      setEditName(\"\");\n      setEditEmail(\"\");\n      setEditPhone(\"\");\n      setEditType(\"\");\n      setEditCategory(\"\");\n      setEditEmployeeType(\"\");\n      setEditYearOfGraduate(\"\");\n      setEditImage(null);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: `Filter by Type: ${selectedType}`,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"student\"),\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"graduate\"),\n            children: \"Graduate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"employee\"),\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedUsers(filteredUsers.map(user => user._id)); // select all visible users if the \"Select All\" checkbox is checked\n                  } else {\n                    setSelectedUsers([]); // deselect all visible users if the \"Select All\" checkbox is unchecked\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Addtional Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                checked: selectedUsers.includes(user._id),\n                onChange: () => handleCheckboxSelect(user._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [user.type === \"student\" && user.category, user.type === \"graduate\" && moment(user.date).format('MM/DD/YYYY'), user.type === \"employee\" && user.employeeType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => openImage(user.image),\n                children: \"View Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => handleEdit(user._id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), selectedUsers.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: deleteSelectedUsers,\n        children: \"Delete Selected Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: editName,\n            onChange: e => setEditName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: editEmail,\n            onChange: e => setEditEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPhone\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter phone number\",\n            value: editPhone,\n            onChange: e => setEditPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicType\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: editType,\n            onChange: e => setEditType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"type\",\n              children: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"graduate\",\n              children: \"Graduate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), editType === \"student\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCategory\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Student Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: editCategory,\n            onChange: e => setEditCategory(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high School\",\n              children: \"High School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"university\",\n              children: \"University\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), editType === \"graduate\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicYearOfGraduate\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date of Graduate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            value: editCategory,\n            onChange: e => setEditYearOfGraduate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }, this), editType === \"employee\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmployeeType\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Employee Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: editCategory,\n            onChange: e => setEditEmployeeType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"full-time\",\n              children: \"Full-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"part-time\",\n              children: \"Part-time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"freelancer\",\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formImage\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"New Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: handleImageSelect,\n            accept: \"image/*\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setSelectedUser(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Info, \"lfVFa7/JczFGlhB1HwJ9/7Aa0SA=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Table","Button","DropdownButton","Dropdown","Form","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","_s","api","users","setUsers","selectedType","setSelectedType","selectedUsers","setSelectedUsers","selectedUser","setSelectedUser","editName","setEditName","editEmail","setEditEmail","editPhone","setEditPhone","editType","setEditType","editCategory","setEditCategory","editEmployeeType","setEditEmployeeType","editYearOfGraduate","setEditYearOfGraduate","editImage","setEditImage","get","then","res","data","openImage","image","window","open","handleTypeSelect","type","handleCheckboxSelect","id","includes","filter","userId","filteredUsers","user","deleteSelectedUsers","delete","ids","_id","handleEdit","find","name","email","phone","category","employeeType","date","format","handleImageSelect","e","target","files","handleSubmit","preventDefault","formData","FormData","append","put","yearOfGraduate","updatedUser","index","findIndex","updatedUsers","map","children","className","title","Item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","Check","onChange","checked","variant","length","onSubmit","Group","controlId","Label","Control","placeholder","value","as","accept","required","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/Info.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\n/**\r\n * Component to display user information\r\n */\r\nexport default function Info() {\r\n  const api = \"http://127.0.0.1:3001\";\r\n\r\n  const [users, setUsers] = useState([]); // State variable to store user data\r\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\r\n  const [selectedUsers, setSelectedUsers] = useState([]); // State variable to store the currently selected users to delete\r\n  const [selectedUser, setSelectedUser] = useState(null); // State variable to store the ID of the user being edited\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editEmail, setEditEmail] = useState(\"\");\r\n  const [editPhone, setEditPhone] = useState(\"\");\r\n  const [editType, setEditType] = useState(\"\");\r\n\r\n  const [editCategory, setEditCategory] = useState(\"\");\r\n  const [editEmployeeType, setEditEmployeeType] = useState(\"\");\r\n  const [editYearOfGraduate, setEditYearOfGraduate] = useState(\"\");\r\n\r\n  const [editImage, setEditImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${api}/users`).then((res) => { // Send GET request to /users endpoint to retrieve user data\r\n      setUsers(res.data); // Update state variable with retrieved data\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\r\n  const openImage = (image) => {\r\n    window.open(image, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\r\n  };\r\n\r\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\r\n  const handleTypeSelect = (type) => {\r\n    setSelectedType(type); // Update state variable with the selected user type\r\n  };\r\n\r\n  /**\r\n   * Function to handle checkbox selection\r\n   * @param id - ID of the user to select or deselect\r\n   */\r\n  const handleCheckboxSelect = (id) => {\r\n    if (selectedUsers.includes(id)) {\r\n      setSelectedUsers(selectedUsers.filter((userId) => userId !== id)); // remove user from the selected users array if it is already selected\r\n    } else {\r\n      setSelectedUsers([...selectedUsers, id]); // add user to the selected users array if it is not already selected\r\n    }\r\n  };\r\n\r\n  const filteredUsers =\r\n    selectedType === \"all\"\r\n      ? users\r\n      : users.filter((user) => user.type === selectedType); // Filter user data based on selected user type\r\n\r\n  /**\r\n   * Function to delete selected users from the table and the database\r\n   */\r\n  const deleteSelectedUsers = () => {\r\n    Axios.delete(`${api}/users`, { data: { ids: selectedUsers } }).then((res) => { // Send DELETE request to /users endpoint to delete selected users from the database\r\n      setUsers(users.filter((user) => !selectedUsers.includes(user._id))); // Update state variable with updated user data after deletion\r\n      setSelectedUsers([]);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Function to handle editing user information\r\n   * @param id - ID of the user being edited\r\n   */\r\n  const handleEdit = (id) => {\r\n    setSelectedUser(id); // Set the ID of the user being edited\r\n    const user = users.find((user) => user._id === id); // Find the user data for the selected user\r\n    setEditName(user.name);\r\n    setEditEmail(user.email);\r\n    setEditPhone(user.phone);\r\n    setEditType(user.type);\r\n    setEditCategory(user.category);\r\n    setEditEmployeeType(user.employeeType);\r\n    setEditYearOfGraduate(moment(user.date).format('MM/DD/YYYY'));\r\n    setEditImage(null);\r\n  };\r\n\r\n  /**\r\n   * Function to handle selecting a new image file\r\n   * @param e - Input change event\r\n   */\r\n  const handleImageSelect = (e) => {\r\n    setEditImage(e.target.files[0]); // Set the new image file in the state variable\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", editName);\r\n    formData.append(\"email\", editEmail);\r\n    formData.append(\"phone\", editPhone);\r\n    formData.append(\"type\", editType);\r\n\r\n    // Check if the value of editCategory is a valid enum value  \r\n    if ([\"high School\", \"university\"].includes(editCategory)) {\r\n      formData.append(\"category\", editCategory);\r\n    } else {\r\n      // If the value is not a valid enum value, set the category field to null    \r\n      formData.append(\"category\", null);\r\n    }\r\n\r\n    // Check if the value of editEmployeeType is a valid enum value\r\n    if ([\"full-time\", \"part-time\", \"freelancer\"].includes(editEmployeeType)) {\r\n      formData.append(\"employeeType\", editEmployeeType);\r\n    } else {\r\n      // If the value is not a valid enum value, set the employeeType field to null   \r\n      formData.append(\"employeeType\", null);\r\n    }\r\n\r\n    if (editYearOfGraduate) {\r\n      formData.append(\"yearOfGraduate\", editYearOfGraduate);\r\n    }\r\n\r\n    if (editImage) {\r\n      formData.append(\"image\", editImage);\r\n    }\r\n\r\n    Axios.put(`${api}/users`, {\r\n      userId: selectedUser,\r\n      name: editName,\r\n      email: editEmail,\r\n      phone: editPhone,\r\n      type: editType,\r\n      category: editCategory,\r\n      employeeType: editEmployeeType,\r\n      yearOfGraduate: editYearOfGraduate,\r\n      image: editImage\r\n    }).then(res => {\r\n      const updatedUser = res.data;\r\n\r\n      const index = users.findIndex(user => user._id === updatedUser._id); \r\n  updatedUsers[index] = updatedUser;  \r\n  \r\n  setUsers(updatedUsers);\r\n      const updatedUsers = users.map(user => {\r\n        if (user._id === updatedUser._id) {\r\n          return updatedUser;\r\n        } else {\r\n          return user;\r\n        }\r\n      });\r\n      setUsers(updatedUsers);\r\n      setSelectedUser(null);\r\n      setEditName(\"\");\r\n      setEditEmail(\"\");\r\n      setEditPhone(\"\");\r\n      setEditType(\"\");\r\n      setEditCategory(\"\");\r\n      setEditEmployeeType(\"\");\r\n      setEditYearOfGraduate(\"\");\r\n      setEditImage(null);\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Dropdown menu to filter users by type */}\r\n        <div className=\"my-3 d-flex justify-content-end\">\r\n          <DropdownButton\r\n            id=\"dropdown-basic-button\"\r\n            title={`Filter by Type: ${selectedType}`}\r\n          >\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"student\")}>\r\n              Student\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"graduate\")}>\r\n              Graduate\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"employee\")}>\r\n              Employee\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </div>\r\n\r\n        {/* Table to display user information */}\r\n        <Table striped bordered hover className=\"my-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedUsers(filteredUsers.map((user) => user._id)); // select all visible users if the \"Select All\" checkbox is checked\r\n                    } else {\r\n                      setSelectedUsers([]); // deselect all visible users if the \"Select All\" checkbox is unchecked\r\n                    }\r\n                  }}\r\n                />\r\n              </th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Type</th>\r\n              <th>Addtional Information</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {filteredUsers.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    checked={selectedUsers.includes(user._id)}\r\n                    onChange={() => handleCheckboxSelect(user._id)}\r\n                  />\r\n                </td>\r\n\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.type}</td>\r\n                <td>\r\n                  {user.type === \"student\" && user.category}\r\n                  {user.type === \"graduate\" && moment(user.date).format('MM/DD/YYYY')}\r\n                  {user.type === \"employee\" && user.employeeType}\r\n                </td>\r\n                <td>\r\n\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => openImage(user.image)}\r\n                  >\r\n                    View Image\r\n                  </Button>{\" \"}\r\n                </td>\r\n\r\n                <td>\r\n                  <Button variant=\"warning\" onClick={() => handleEdit(user._id)}>Edit</Button>{\" \"}\r\n                </td>\r\n\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* Button to delete selected users */}\r\n        {selectedUsers.length > 0 && (\r\n          <Button variant=\"danger\" onClick={deleteSelectedUsers}>\r\n            Delete Selected Users\r\n          </Button>\r\n        )}\r\n\r\n        {/* Edit user form */}\r\n        {selectedUser && (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                value={editName}\r\n                onChange={(e) => setEditName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={editEmail}\r\n                onChange={(e) => setEditEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPhone\">\r\n              <Form.Label>Phone number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter phone number\"\r\n                value={editPhone}\r\n                onChange={(e) => setEditPhone(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicType\">\r\n              <Form.Label>Type</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={editType}\r\n                onChange={(e) => setEditType(e.target.value)}\r\n              >\r\n                <option value=\"type\">type</option>\r\n                <option value=\"student\">Student</option>\r\n                <option value=\"graduate\">Graduate</option>\r\n                <option value=\"employee\">Employee</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            {editType === \"student\" && (\r\n              <Form.Group controlId=\"formBasicCategory\">\r\n                <Form.Label>Student Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={editCategory}\r\n                  onChange={(e) => setEditCategory(e.target.value)}\r\n                >\r\n                  <option value=\"high School\">High School</option>\r\n                  <option value=\"university\">University</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            )}\r\n\r\n            {editType === \"graduate\" && (\r\n              <Form.Group controlId=\"formBasicYearOfGraduate\">\r\n                <Form.Label>Date of Graduate</Form.Label>\r\n                <Form.Control\r\n                  type=\"date\"\r\n                  value={editCategory}\r\n                  onChange={(e) => setEditYearOfGraduate(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n\r\n            {editType === \"employee\" && (\r\n              <Form.Group controlId=\"formBasicEmployeeType\">\r\n                <Form.Label>Employee Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={editCategory}\r\n                  onChange={(e) => setEditEmployeeType(e.target.value)}\r\n                >\r\n                  <option value=\"full-time\">Full-time</option>\r\n                  <option value=\"part-time\">Part-time</option>\r\n                  <option value=\"freelancer\">Freelancer</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            )}\r\n\r\n            <Form.Group controlId=\"formImage\">\r\n              <Form.Label>New Image</Form.Label>\r\n              <Form.Control type=\"file\" onChange={handleImageSelect} accept=\"image/*\" required />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>{\" \"}\r\n\r\n            <Button variant=\"secondary\" onClick={() => setSelectedUser(null)} >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}