{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\Info.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Table, Button, DropdownButton, Dropdown } from \"react-bootstrap\";\n\n/**\r\n * Component to display user information\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  _s();\n  const api = \"http://127.0.0.1:3001\";\n  const [users, setUsers] = useState([]); // State variable to store user data\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\n  const [selectedCategory, setSelectedCategory] = useState(\"all\"); // State variable to store the currently selected user category\n  const [selectedEmployeeType, setSelectedEmployeeType] = useState(\"all\"); // State variable to store the currently selected user employee type\n  const [selectedYearOfGraduate, setSelectedYearOfGraduate] = useState(\"all\"); // State variable to store the currently selected user year of graduation\n\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      // Send GET request to /users endpoint to retrieve user data\n      setUsers(res.data); // Update state variable with retrieved data\n    });\n  }, []);\n\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\n  const openImage = imageUrl => {\n    window.open(imageUrl, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\n  };\n\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\n  const handleTypeSelect = type => {\n    setSelectedType(type); // Update state variable with the selected user type\n  };\n\n  /**\r\n   * Function to handle user category selection from dropdown menu\r\n   * @param category - Selected user category\r\n   */\n  const handleCategorySelect = category => {\n    setSelectedCategory(category); // Update state variable with the selected user category\n  };\n\n  /**\r\n   * Function to handle user employee type selection from dropdown menu\r\n   * @param employeeType - Selected user employee type\r\n   */\n  const handleEmployeeTypeSelect = employeeType => {\n    setSelectedEmployeeType(employeeType); // Update state variable with the selected user employee type\n  };\n\n  /**\r\n   * Function to handle user year of graduation selection from dropdown menu\r\n   * @param yearOfGraduate - Selected user year of graduation\r\n   */\n  const handleYearOfGraduateSelect = yearOfGraduate => {\n    setSelectedYearOfGraduate(yearOfGraduate); // Update state variable with the selected user year of graduation\n  };\n\n  const filteredUsers = selectedType === \"all\" && selectedCategory === \"all\" && selectedEmployeeType === \"all\" && selectedYearOfGraduate === \"all\" ? users : users.filter(user => (selectedType === \"all\" || user.type === selectedType) && (selectedCategory === \"all\" || user.category === selectedCategory) && (selectedEmployeeType === \"all\" || user.employeeType === selectedEmployeeType) && (selectedYearOfGraduate === \"all\" || user.yearOfGraduate === selectedYearOfGraduate)); // Filter user data based on selected user type, category, employee type, and year of graduation\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"type-dropdown\",\n          title: `Filter by Type: ${selectedType}`,\n          className: \"mx-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Student\"),\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Graduate\"),\n            children: \"Graduate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"Employed\"),\n            children: \"Employed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"category-dropdown\",\n          title: `Filter by Category: ${selectedCategory}`,\n          className: \"mx-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleCategorySelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleCategorySelect(\"Engineering\"),\n            children: \"Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleCategorySelect(\"Science\"),\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleCategorySelect(\"Arts\"),\n            children: \"Arts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleCategorySelect(\"Business\"),\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"employee-type-dropdown\",\n          title: `Filter by Employee Type: ${selectedEmployeeType}`,\n          className: \"mx-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleEmployeeTypeSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleEmployeeTypeSelect(\"Full-time\"),\n            children: \"Full-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleEmployeeTypeSelect(\"Part-time\"),\n            children: \"Part-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleEmployeeTypeSelect(\"Contractor\"),\n            children: \"Contractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"year-of-graduate-dropdown\",\n          title: `Filter by Year of Graduation: ${selectedYearOfGraduate}`,\n          className: \"mx-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleYearOfGraduateSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleYearOfGraduateSelect(\"2020\"),\n            children: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleYearOfGraduateSelect(\"2021\"),\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleYearOfGraduateSelect(\"2022\"),\n            children: \"2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleYearOfGraduateSelect(\"2023\"),\n            children: \"2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year of Graduation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredUsers.map(_ref => {\n            let {\n              _id,\n              name,\n              phone,\n              email,\n              type,\n              category,\n              employeeType,\n              yearOfGraduate,\n              imageUrl\n            } = _ref;\n            // Map through filtered user data and render each user's information in a table row\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: employeeType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: yearOfGraduate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: imageUrl &&\n                /*#__PURE__*/\n                // If user has an image URL, render \"View Image\" button\n                _jsxDEV(Button, {\n                  variant: \"link\",\n                  onClick: e => {\n                    e.preventDefault(); // prevent the default button behavior\n                    openImage(imageUrl); // call the openImage function with the imageUrl argument\n                  },\n                  children: \"View Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, _id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Info, \"JTYf3c5ZPBS6LOr3bm6/3Bo+FJ4=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Table","Button","DropdownButton","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","_s","api","users","setUsers","selectedType","setSelectedType","selectedCategory","setSelectedCategory","selectedEmployeeType","setSelectedEmployeeType","selectedYearOfGraduate","setSelectedYearOfGraduate","get","then","res","data","openImage","imageUrl","window","open","handleTypeSelect","type","handleCategorySelect","category","handleEmployeeTypeSelect","employeeType","handleYearOfGraduateSelect","yearOfGraduate","filteredUsers","filter","user","children","className","id","title","Item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","_ref","_id","name","phone","email","variant","e","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/Info.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/**\r\n * Component to display user information\r\n */\r\nexport default function Info() {\r\n  const api = \"http://127.0.0.1:3001\";\r\n\r\n  const [users, setUsers] = useState([]); // State variable to store user data\r\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\r\n  const [selectedCategory, setSelectedCategory] = useState(\"all\"); // State variable to store the currently selected user category\r\n  const [selectedEmployeeType, setSelectedEmployeeType] = useState(\"all\"); // State variable to store the currently selected user employee type\r\n  const [selectedYearOfGraduate, setSelectedYearOfGraduate] = useState(\"all\"); // State variable to store the currently selected user year of graduation\r\n  \r\n  useEffect(() => {\r\n    Axios.get(`${api}/users`).then((res) => { // Send GET request to /users endpoint to retrieve user data\r\n      setUsers(res.data); // Update state variable with retrieved data\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\r\n  const openImage = (imageUrl) => {\r\n    window.open(imageUrl, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\r\n  };\r\n\r\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\r\n  const handleTypeSelect = (type) => {\r\n    setSelectedType(type); // Update state variable with the selected user type\r\n  };\r\n\r\n  /**\r\n   * Function to handle user category selection from dropdown menu\r\n   * @param category - Selected user category\r\n   */\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category); // Update state variable with the selected user category\r\n  };\r\n\r\n  /**\r\n   * Function to handle user employee type selection from dropdown menu\r\n   * @param employeeType - Selected user employee type\r\n   */\r\n  const handleEmployeeTypeSelect = (employeeType) => {\r\n    setSelectedEmployeeType(employeeType); // Update state variable with the selected user employee type\r\n  };\r\n\r\n  /**\r\n   * Function to handle user year of graduation selection from dropdown menu\r\n   * @param yearOfGraduate - Selected user year of graduation\r\n   */\r\n  const handleYearOfGraduateSelect = (yearOfGraduate) => {\r\n    setSelectedYearOfGraduate(yearOfGraduate); // Update state variable with the selected user year of graduation\r\n  };\r\n\r\n  const filteredUsers =\r\n    selectedType === \"all\" && selectedCategory === \"all\" && selectedEmployeeType === \"all\" && selectedYearOfGraduate === \"all\"\r\n      ? users\r\n      : users.filter((user) => \r\n          (selectedType === \"all\" || user.type === selectedType) &&\r\n          (selectedCategory === \"all\" || user.category === selectedCategory) &&\r\n          (selectedEmployeeType === \"all\" || user.employeeType === selectedEmployeeType) &&\r\n          (selectedYearOfGraduate === \"all\" || user.yearOfGraduate === selectedYearOfGraduate)\r\n        ); // Filter user data based on selected user type, category, employee type, and year of graduation\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Dropdown menus to filter users by type, category, employee type, and year of graduation */}\r\n        <div className=\"my-3 d-flex justify-content-end\">\r\n          <DropdownButton\r\n            id=\"type-dropdown\"\r\n            title={`Filter by Type: ${selectedType}`}\r\n            className=\"mx-3\"\r\n          >\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Student\")}>\r\n              Student\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Graduate\")}>\r\n              Graduate\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"Employed\")}>\r\n              Employed\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n\r\n          <DropdownButton\r\n            id=\"category-dropdown\"\r\n            title={`Filter by Category: ${selectedCategory}`}\r\n            className=\"mx-3\"\r\n          >\r\n            <Dropdown.Item onClick={() => handleCategorySelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleCategorySelect(\"Engineering\")}>\r\n              Engineering\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleCategorySelect(\"Science\")}>\r\n              Science\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleCategorySelect(\"Arts\")}>\r\n              Arts\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleCategorySelect(\"Business\")}>\r\n              Business\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n\r\n          <DropdownButton\r\n            id=\"employee-type-dropdown\"\r\n            title={`Filter by Employee Type: ${selectedEmployeeType}`}\r\n            className=\"mx-3\"\r\n          >\r\n            <Dropdown.Item onClick={() => handleEmployeeTypeSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleEmployeeTypeSelect(\"Full-time\")}>\r\n              Full-time\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleEmployeeTypeSelect(\"Part-time\")}>\r\n              Part-time\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleEmployeeTypeSelect(\"Contractor\")}>\r\n              Contractor\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n\r\n          <DropdownButton\r\n            id=\"year-of-graduate-dropdown\"\r\n            title={`Filter by Year of Graduation: ${selectedYearOfGraduate}`}\r\n            className=\"mx-3\"\r\n          >\r\n            <Dropdown.Item onClick={() => handleYearOfGraduateSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleYearOfGraduateSelect(\"2020\")}>\r\n              2020\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleYearOfGraduateSelect(\"2021\")}>\r\n              2021\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleYearOfGraduateSelect(\"2022\")}>\r\n              2022\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleYearOfGraduateSelect(\"2023\")}>\r\n              2023\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </div>\r\n\r\n        {/* Table to display user information */}\r\n        <Table striped bordered hover className=\"my-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Type</th>\r\n              <th>Category</th>\r\n              <th>Employee Type</th>\r\n              <th>Year of Graduation</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map(({ _id, name, phone, email, type, category, employeeType, yearOfGraduate, imageUrl }) => { // Map through filtered user data and render each user's information in a table row\r\n              return (\r\n                <tr key={_id}>\r\n                  <td>{name}</td>\r\n                  <td>{email}</td>\r\n                  <td>{phone}</td>\r\n                  <td>{type}</td>\r\n                  <td>{category}</td>\r\n                  <td>{employeeType}</td>\r\n                  <td>{yearOfGraduate}</td>\r\n                  <td>\r\n                    {imageUrl && ( // If user has an image URL, render \"View Image\" button\r\n                      <Button\r\n                        variant=\"link\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault(); // prevent the default button behavior\r\n                          openImage(imageUrl); // call the openImage function with the imageUrl argument\r\n                        }}\r\n                      >\r\n                        View Image\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}