{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\Info.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Table, Button, DropdownButton, Dropdown, Form } from \"react-bootstrap\";\nimport moment from 'moment';\n\n/**\r\n * Component to display user information\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Info() {\n  _s();\n  const api = \"http://127.0.0.1:3001\";\n  const [users, setUsers] = useState([]); // State variable to store user data\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\n  const [selectedUsers, setSelectedUsers] = useState([]); // State variable to store the currently selected users to delete\n  const [selectedUser, setSelectedUser] = useState(null); // State variable to store the ID of the user being edited\n  const [editName, setEditName] = useState(\"\");\n  const [editEmail, setEditEmail] = useState(\"\");\n  const [editPhone, setEditPhone] = useState(\"\");\n  const [editType, setEditType] = useState(\"\");\n  const [editCategory, setEditCategory] = useState(\"\");\n  const [editImage, setEditImage] = useState(\"\");\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      // Send GET request to /users endpoint to retrieve user data\n      setUsers(res.data); // Update state variable with retrieved data\n    });\n  }, []);\n\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\n  const openImage = image => {\n    window.open(image, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\n  };\n\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\n  const handleTypeSelect = type => {\n    setSelectedType(type); // Update state variable with the selected user type\n  };\n\n  /**\r\n   * Function to handle checkbox selection\r\n   * @param id - ID of the user to select or deselect\r\n   */\n  const handleCheckboxSelect = id => {\n    if (selectedUsers.includes(id)) {\n      setSelectedUsers(selectedUsers.filter(userId => userId !== id)); // remove user from the selected users array if it is already selected\n    } else {\n      setSelectedUsers([...selectedUsers, id]); // add user to the selected users array if it is not already selected\n    }\n  };\n\n  const filteredUsers = selectedType === \"all\" ? users : users.filter(user => user.type === selectedType); // Filter user data based on selected user type\n\n  /**\r\n   * Function to delete selected users from the table and the database\r\n   */\n  const deleteSelectedUsers = () => {\n    Axios.delete(`${api}/users`, {\n      data: {\n        ids: selectedUsers\n      }\n    }).then(res => {\n      // Send DELETE request to /users endpoint to delete selected users from the database\n      setUsers(users.filter(user => !selectedUsers.includes(user._id))); // Update state variable with updated user data after deletion\n      setSelectedUsers([]);\n    });\n  };\n\n  /**\r\n   * Function to handle editing user information\r\n   * @param id - ID of the user being edited\r\n   */\n  const handleEdit = id => {\n    setSelectedUser(id); // Set the ID of the user being edited\n    const user = users.find(user => user._id === id); // Find the user data for the selected user\n    setEditName(user.name);\n    setEditEmail(user.email);\n    setEditPhone(user.phone);\n    setEditType(user.type);\n    setEditCategory(user.category || user.employeeType || moment(user.date).format('MM/DD/YYYY'));\n    setEditImage(user.image);\n  };\n\n  /**\r\n     * Function to handle submitting the edit user form\r\n     * @param e - Form submit event\r\n     */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      name,\n      email,\n      phone,\n      category,\n      image\n    };\n\n    // Check if there are any existing users with the same name, email, or phone number\n    const existingUsers = await getUsers();\n    const duplicateUser = existingUsers.find(user => user.name === formData.name || user.email === formData.email || user.phone === formData.phone);\n    if (duplicateUser) {\n      alert(\"A user with the same name, email, or phone number already exists.\");\n      return;\n    }\n\n    // Add the new user to the database\n    await addUser(formData);\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setCategory(\"full-time\");\n    setImage(\"\");\n    alert(\"User added successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          id: \"dropdown-basic-button\",\n          title: `Filter by Type: ${selectedType}`,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"student\"),\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"graduate\"),\n            children: \"Graduate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => handleTypeSelect(\"employee\"),\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                onChange: e => {\n                  if (e.target.checked) {\n                    setSelectedUsers(filteredUsers.map(user => user._id)); // select all visible users if the \"Select All\" checkbox is checked\n                  } else {\n                    setSelectedUsers([]); // deselect all visible users if the \"Select All\" checkbox is unchecked\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Addtional Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                checked: selectedUsers.includes(user._id),\n                onChange: () => handleCheckboxSelect(user._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.category || user.employeeType || moment(user.date).format('MM/DD/YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => openImage(user.image),\n                children: \"View Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => handleEdit(user._id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), selectedUsers.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: deleteSelectedUsers,\n        children: \"Delete Selected Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editName,\n            onChange: e => setEditName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: editEmail,\n            onChange: e => setEditEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPhone\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editPhone,\n            onChange: e => setEditPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formType\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: editType,\n            onChange: e => setEditType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"graduate\",\n              children: \"Graduate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCategory\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Addtional Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter additional information\",\n            value: editCategory,\n            onChange: e => setEditCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formImage\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editImage,\n            onChange: e => setEditImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setSelectedUser(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Info, \"XQa5M18YymAmbiHohSwQTAM+SEc=\");\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Table","Button","DropdownButton","Dropdown","Form","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Info","_s","api","users","setUsers","selectedType","setSelectedType","selectedUsers","setSelectedUsers","selectedUser","setSelectedUser","editName","setEditName","editEmail","setEditEmail","editPhone","setEditPhone","editType","setEditType","editCategory","setEditCategory","editImage","setEditImage","get","then","res","data","openImage","image","window","open","handleTypeSelect","type","handleCheckboxSelect","id","includes","filter","userId","filteredUsers","user","deleteSelectedUsers","delete","ids","_id","handleEdit","find","name","email","phone","category","employeeType","date","format","handleSubmit","e","preventDefault","formData","existingUsers","getUsers","duplicateUser","alert","addUser","setName","setEmail","setPhone","setCategory","setImage","children","className","title","Item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","Check","onChange","target","checked","map","variant","length","onSubmit","Group","controlId","Label","Control","value","as","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/Info.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport moment from 'moment';\r\n\r\n/**\r\n * Component to display user information\r\n */\r\nexport default function Info() {\r\n  const api = \"http://127.0.0.1:3001\";\r\n\r\n  const [users, setUsers] = useState([]); // State variable to store user data\r\n  const [selectedType, setSelectedType] = useState(\"all\"); // State variable to store the currently selected user type\r\n  const [selectedUsers, setSelectedUsers] = useState([]); // State variable to store the currently selected users to delete\r\n  const [selectedUser, setSelectedUser] = useState(null); // State variable to store the ID of the user being edited\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editEmail, setEditEmail] = useState(\"\");\r\n  const [editPhone, setEditPhone] = useState(\"\");\r\n  const [editType, setEditType] = useState(\"\");\r\n\r\n  const [editCategory, setEditCategory] = useState(\"\");\r\n\r\n  const [editImage, setEditImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(`${api}/users`).then((res) => { // Send GET request to /users endpoint to retrieve user data\r\n      setUsers(res.data); // Update state variable with retrieved data\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Function to open image URL in a new window\r\n   * @param imageUrl - URL of the image to open\r\n   */\r\n  const openImage = (image) => {\r\n    window.open(image, \"_blank\"); // Open image URL in a new window when user clicks \"View Image\" button\r\n  };\r\n\r\n  /**\r\n   * Function to handle user type selection from dropdown menu\r\n   * @param type - Selected user type\r\n   */\r\n  const handleTypeSelect = (type) => {\r\n    setSelectedType(type); // Update state variable with the selected user type\r\n  };\r\n  \r\n  /**\r\n   * Function to handle checkbox selection\r\n   * @param id - ID of the user to select or deselect\r\n   */\r\n  const handleCheckboxSelect = (id) => {\r\n    if (selectedUsers.includes(id)) {\r\n      setSelectedUsers(selectedUsers.filter((userId) => userId !== id)); // remove user from the selected users array if it is already selected\r\n    } else {\r\n      setSelectedUsers([...selectedUsers, id]); // add user to the selected users array if it is not already selected\r\n    }\r\n  };\r\n\r\n  const filteredUsers =\r\n    selectedType === \"all\"\r\n      ? users\r\n      : users.filter((user) => user.type === selectedType); // Filter user data based on selected user type\r\n\r\n  /**\r\n   * Function to delete selected users from the table and the database\r\n   */\r\n  const deleteSelectedUsers = () => {\r\n    Axios.delete(`${api}/users`, { data: { ids: selectedUsers } }).then((res) => { // Send DELETE request to /users endpoint to delete selected users from the database\r\n      setUsers(users.filter((user) => !selectedUsers.includes(user._id))); // Update state variable with updated user data after deletion\r\n      setSelectedUsers([]);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Function to handle editing user information\r\n   * @param id - ID of the user being edited\r\n   */\r\n  const handleEdit = (id) => {\r\n    setSelectedUser(id); // Set the ID of the user being edited\r\n    const user = users.find((user) => user._id === id); // Find the user data for the selected user\r\n    setEditName(user.name);\r\n    setEditEmail(user.email);\r\n    setEditPhone(user.phone);\r\n    setEditType(user.type);\r\n    setEditCategory(user.category || user.employeeType || moment(user.date).format('MM/DD/YYYY'));\r\n  setEditImage(user.image);\r\n  };\r\n\r\n/**\r\n   * Function to handle submitting the edit user form\r\n   * @param e - Form submit event\r\n   */\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  const formData = {\r\n    name,\r\n    email,\r\n    phone,\r\n    category,\r\n    image,\r\n  };\r\n\r\n  // Check if there are any existing users with the same name, email, or phone number\r\n  const existingUsers = await getUsers();\r\n  const duplicateUser = existingUsers.find(\r\n    (user) =>\r\n      user.name === formData.name ||\r\n      user.email === formData.email ||\r\n      user.phone === formData.phone\r\n  );\r\n  if (duplicateUser) {\r\n    alert(\"A user with the same name, email, or phone number already exists.\");\r\n    return;\r\n  }\r\n\r\n  // Add the new user to the database\r\n  await addUser(formData);\r\n  setName(\"\");\r\n  setEmail(\"\");\r\n  setPhone(\"\");\r\n  setCategory(\"full-time\");\r\n  setImage(\"\");\r\n  alert(\"User added successfully!\");\r\n};\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Dropdown menu to filter users by type */}\r\n        <div className=\"my-3 d-flex justify-content-end\">\r\n          <DropdownButton\r\n            id=\"dropdown-basic-button\"\r\n            title={`Filter by Type: ${selectedType}`}\r\n          >\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"all\")}>\r\n              All\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"student\")}>\r\n              Student\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"graduate\")}>\r\n              Graduate\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => handleTypeSelect(\"employee\")}>\r\n              Employee\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </div>\r\n\r\n        {/* Table to display user information */}\r\n        <Table striped bordered hover className=\"my-3\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  onChange={(e) => {\r\n                    if (e.target.checked) {\r\n                      setSelectedUsers(filteredUsers.map((user) => user._id)); // select all visible users if the \"Select All\" checkbox is checked\r\n                    } else {\r\n                      setSelectedUsers([]); // deselect all visible users if the \"Select All\" checkbox is unchecked\r\n                    }\r\n                  }}\r\n                />\r\n              </th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone</th>\r\n              <th>Type</th>\r\n              <th>Addtional Information</th>\r\n              <th>Image</th>\r\n              <th>Actions</th> {/* Add a new column for edit and delete buttons */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    checked={selectedUsers.includes(user._id)}\r\n                    onChange={() => handleCheckboxSelect(user._id)}\r\n                  />\r\n                </td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.type}</td>\r\n                <td>{user.category || user.employeeType || moment(user.date).format('MM/DD/YYYY')}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => openImage(user.image)}\r\n                  >\r\n                    View Image\r\n                  </Button>{\" \"}\r\n                </td>\r\n                <td>\r\n                  <Button variant=\"warning\" onClick={() => handleEdit(user._id)}>Edit</Button>{\" \"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n        {/* Button to delete selected users */}\r\n        {selectedUsers.length > 0 && (\r\n          <Button variant=\"danger\" onClick={deleteSelectedUsers}>\r\n            Delete Selected Users\r\n          </Button>\r\n        )}\r\n\r\n        {/* Edit user form */}\r\n        {selectedUser && (\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editName}\r\n                onChange={(e) => setEditName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={editEmail}\r\n                onChange={(e) => setEditEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formPhone\">\r\n              <Form.Label>Phone</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editPhone}\r\n                onChange={(e) => setEditPhone(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formType\">\r\n              <Form.Label>Type</Form.Label>\r\n              <Form.Control as=\"select\"\r\n            value={editType}\r\n            onChange={(e) => setEditType(e.target.value)}\r\n          >\r\n            <option value=\"student\">Student</option>\r\n            <option value=\"graduate\">Graduate</option>\r\n            <option value=\"employee\">Employee</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicCategory\">\r\n        <Form.Label>Addtional Information</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter additional information\"\r\n                        value={editCategory}\r\n                        onChange={(e) => setEditCategory(e.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n\r\n        <Form.Group controlId=\"formImage\">\r\n          <Form.Label>Image URL</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={editImage}\r\n            onChange={(e) => setEditImage(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Save\r\n        </Button>{\" \"}\r\n        <Button variant=\"secondary\" onClick={() => setSelectedUser(null)}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    )}\r\n  </Container>\r\n</>\r\n  );}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}