{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\Auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport { useCookies } from 'react-cookie';\nimport Info from './Info';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [cookies, setCookies] = useCookies(['access_token']); // Initialize access_token cookie\n  const [registered, setRegistered] = useState(false); // State variable to keep track of whether user is registered\n\n  /**\r\n   * Remove access_token cookie and adminID from local storage, then reload the page\r\n   */\n  const removeCookies = () => {\n    setCookies('access_token', '');\n    window.localStorage.removeItem('adminID');\n    window.location.reload(false);\n  };\n\n  /**\r\n   * Set registered state variable to true to switch to Login component\r\n   */\n  const handleRegister = () => {\n    setRegistered(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/Auth\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cookies.access_token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: removeCookies,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: registered ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Register, {\n          handleRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Component for registering a new admin user\n_s(Auth, \"PHAaKA9JP6zMiBE2bkGuclxu4+g=\", false, function () {\n  return [useCookies];\n});\n_c = Auth;\nconst Register = _ref => {\n  _s2();\n  let {\n    handleRegister\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  /**\r\n   * Handle form submission and send POST request to register new admin\r\n   * @param e - Form submit event object\r\n   */\n  /**\r\n  * Handle form submission and send POST request to register new admin\r\n  * @param e - Form submit event object\r\n  */\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    // Check if admin with same username already exists\n    const response = await Axios.get(`http://localhost:3001/admins/${username}`);\n    if (response.data) {\n      alert(\"Admin with that username already exists!\");\n      return;\n    }\n\n    // Register new admin if username is available\n    await Axios.post('http://localhost:3001/register', {\n      username,\n      password\n    });\n    alert('Admin Created');\n    handleRegister();\n  };\n  /*----------------------------------Password-------------------------------------*/\n  /*\r\n  * Validate password format\r\n  * @param password - the password to validate\r\n  * @returns true if the password is valid, false otherwise\r\n  */\n  const validatePassword = password => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    return re.test(String(password));\n  };\n\n  /*\r\n  * Handle password input change and validate the password\r\n  * @param e - Input change event object\r\n  */\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (!validatePassword(e.target.value)) {\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-black\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          placeholder: \"username\",\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for logging in as an admin user\n_s2(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c2 = Register;\nconst Login = () => {\n  _s3();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [_, setCookies] = useCookies(['access_token']); // Initialize access_token cookie\n\n  /**\r\n   * Handle form submission and send POST request to login as admin\r\n   * @param e - Form submit event object\r\n   */\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    // Check if admin with entered username exists\n    const response = await Axios.get(`http://localhost:3001/admins/${username}`);\n    if (!response.data) {\n      alert(\"Admin with that username does not exist!\");\n      return;\n    }\n\n    // Verify entered password against hashed password in database\n    const loginResponse = await Axios.post('http://localhost:3001/login', {\n      username,\n      password\n    });\n    if (!loginResponse.data) {\n      alert(\"Incorrect password!\");\n      return;\n    }\n\n    // Set access_token cookie and adminID in local storage, then reload the page\n    setCookies('access_token', loginResponse.data.token);\n    window.localStorage.setItem('adminID', loginResponse.data.AdminID);\n    window.location.reload(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-black\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          placeholder: \"username\",\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          placeholder: \"password\",\n          onChange: handlePasswordChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s3(Login, \"eveHrVvqqDal/YdH8bO/iRjwNp0=\", false, function () {\n  return [useCookies];\n});\n_c3 = Login;\nexport default Auth;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"Register\");\n$RefreshReg$(_c3, \"Login\");","map":{"version":3,"names":["React","useState","Axios","useCookies","Info","Container","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","cookies","setCookies","registered","setRegistered","removeCookies","window","localStorage","removeItem","location","reload","handleRegister","children","href","fileName","_jsxFileName","lineNumber","columnNumber","access_token","className","variant","onClick","Login","Register","_c","_ref","_s2","username","setUsername","password","setPassword","onSubmit","e","preventDefault","response","get","data","alert","post","validatePassword","re","test","String","handlePasswordChange","target","value","setCustomValidity","Control","type","id","placeholder","onChange","required","_c2","_s3","_","loginResponse","token","setItem","AdminID","_c3","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/Auth.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { useCookies } from 'react-cookie';\r\nimport Info from './Info';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nconst Auth = () => {\r\n  const [cookies, setCookies] = useCookies(['access_token']); // Initialize access_token cookie\r\n  const [registered, setRegistered] = useState(false); // State variable to keep track of whether user is registered\r\n\r\n  /**\r\n   * Remove access_token cookie and adminID from local storage, then reload the page\r\n   */\r\n  const removeCookies = () => {\r\n    setCookies('access_token', '');\r\n    window.localStorage.removeItem('adminID');\r\n    window.location.reload(false);\r\n  };\r\n\r\n  /**\r\n   * Set registered state variable to true to switch to Login component\r\n   */\r\n  const handleRegister = () => {\r\n    setRegistered(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Header section with navigation links */}\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/Auth\">Admin</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <div>\r\n        {cookies.access_token ? (\r\n          <>\r\n            <Info />\r\n            <div className=\"text-center\">\r\n            <Button variant=\"danger\" onClick={removeCookies}>\r\n              Logout\r\n            </Button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {registered ? <Login /> : <Register handleRegister={handleRegister} />}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Component for registering a new admin user\r\nconst Register = ({ handleRegister }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  /**\r\n   * Handle form submission and send POST request to register new admin\r\n   * @param e - Form submit event object\r\n   */\r\n  /**\r\n * Handle form submission and send POST request to register new admin\r\n * @param e - Form submit event object\r\n */\r\nconst onSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Check if admin with same username already exists\r\n  const response = await Axios.get(`http://localhost:3001/admins/${username}`);\r\n  if (response.data) {\r\n    alert(\"Admin with that username already exists!\");\r\n    return;\r\n  }\r\n\r\n  // Register new admin if username is available\r\n  await Axios.post('http://localhost:3001/register', { username, password }); \r\n  alert('Admin Created');\r\n  handleRegister(); \r\n};\r\n/*----------------------------------Password-------------------------------------*/\r\n  /*\r\n  * Validate password format\r\n  * @param password - the password to validate\r\n  * @returns true if the password is valid, false otherwise\r\n  */\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n    return re.test(String(password));\r\n  }\r\n\r\n  /*\r\n  * Handle password input change and validate the password\r\n  * @param e - Input change event object\r\n  */\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n    if (!validatePassword(e.target.value)) {\r\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\r\n    } else {\r\n      e.target.setCustomValidity('');\r\n    }\r\n  }\r\n/*---------------------------------------------------------------------------*/\r\n\r\n  return (\r\n    <Container>\r\n      <Form className=\"form\" onSubmit={onSubmit}>\r\n        <h2 className=\"text-black\">Register</h2>\r\n        <div className=\"form-group\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n          <br></br>\r\n          <Form.Control\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={handlePasswordChange}\r\n            required\r\n          ></Form.Control>\r\n          <br></br>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Component for logging in as an admin user\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [_, setCookies] = useCookies(['access_token']); // Initialize access_token cookie\r\n\r\n  /**\r\n   * Handle form submission and send POST request to login as admin\r\n   * @param e - Form submit event object\r\n   */\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Check if admin with entered username exists\r\n    const response = await Axios.get(`http://localhost:3001/admins/${username}`);\r\n    if (!response.data) {\r\n      alert(\"Admin with that username does not exist!\");\r\n      return;\r\n    }\r\n  \r\n    // Verify entered password against hashed password in database\r\n    const loginResponse = await Axios.post('http://localhost:3001/login', { username, password });\r\n    if (!loginResponse.data) {\r\n      alert(\"Incorrect password!\");\r\n      return;\r\n    }\r\n  \r\n    // Set access_token cookie and adminID in local storage, then reload the page\r\n    setCookies('access_token', loginResponse.data.token);\r\n    window.localStorage.setItem('adminID', loginResponse.data.AdminID);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form className=\"form\" onSubmit={onSubmit}>\r\n        <h2 className=\"text-black\">Login</h2>\r\n        <div className=\"form-group\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            placeholder=\"username\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n\r\n          <br></br>\r\n          <Form.Control\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={handlePasswordChange}\r\n            required\r\n          ></Form.Control>\r\n          <br></br>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}