{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samah\\\\OneDrive\\\\Desktop\\\\mernproject\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // URL of the API that this application will use\n  const api = \"http://127.0.0.1:3001\";\n\n  // Set up state variables to hold user data\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [yearOfGraduate, setYearOfGraduate] = useState(\"\");\n\n  // Use the useEffect hook to fetch user data when the component mounts\n  useEffect(() => {\n    Axios.get(`${api}/users`).then(res => {\n      setUsers(res.data);\n    });\n  }, []);\n\n  /*\n  * Handle form submission and create a new user\n  * @param e - Form submit event object\n  */\n  const createUser = e => {\n    e.preventDefault();\n    if (name && phone && email) {\n      // Create a new FormData object to hold the form data\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"phone\", phone);\n      formData.append(\"email\", email);\n      formData.append(\"password\", password);\n      formData.append(\"type\", type);\n      if (type === \"student\") {\n        formData.append(\"category\", category);\n      } else if (type === \"graduate\") {\n        formData.append(\"yearOfGraduate\", yearOfGraduate);\n      }\n      formData.append(\"image\", image);\n\n      // Use Axios to make a POST request to the API with the form data\n      Axios.post(`${api}/createUser`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        // Update the users state variable with the new user data\n        setUsers([...users, res.data]);\n        // Reset the form inputs\n        setName(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setPassword(\"\");\n        setType(\"\");\n        setCategory(\"\");\n        setImage(\"\");\n        setYearOfGraduate(\"\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n  /*----------------------------------Phone-------------------------------------*/\n  /*\n  * Format the phone number as (XXX) XXX-XXXX\n  * @param phone - the phone number to format\n  * @returns a formatted phone number string\n  */\n  const formatPhoneNumber = phone => {\n    const cleaned = ('' + phone).replace(/\\D/g, '');\n    const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    return match ? '(' + match[1] + ') ' + match[2] + '-' + match[3] : phone;\n  };\n\n  /*\n  * Handle phone input change and format the phone number\n  * @param e - Input change event object\n  */\n  const handlePhoneChange = e => {\n    const input = e.target.value.replace(/\\D/g, '');\n    if (input.length <= 10) {\n      setPhone(formatPhoneNumber(input));\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  /*----------------------------------Email-------------------------------------*/\n  /*\n  * Validate email address format\n  * @param email - the email address to validate\n  * @returns true if the email address is valid, false otherwise\n  */\n  const validateEmail = email => {\n    const re = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    return re.test(String(email).toLowerCase());\n  };\n\n  /*\n  * Handle email input change and validate the email address\n  * @param e - Input change event object\n  */\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    if (!validateEmail(e.target.value)) {\n      e.target.setCustomValidity('Please enter a valid email address');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  /*----------------------------------Password-------------------------------------*/\n  /*\n  * Validate password format\n  * @param password - the password to validate\n  * @returns true if the password is valid, false otherwise\n  */\n  const validatePassword = password => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    return re.test(String(password));\n  };\n\n  /*\n  * Handle password input change and validate the password\n  * @param e - Input change event object\n  */\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n    if (!validatePassword(e.target.value)) {\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  };\n  /*---------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/app\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        onSubmit: createUser,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Phone\",\n          value: phone,\n          onChange: handlePhoneChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"type\",\n          children: /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: type,\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Student\",\n              children: \"Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Graduate\",\n              children: \"Graduate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Employed\",\n              children: \"Employed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => setImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"anmjP4xLygo0RlwLpFCbC0Hga1s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Axios","Container","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","api","users","setUsers","name","setName","email","setEmail","phone","setPhone","password","setPassword","type","setType","category","setCategory","image","setImage","yearOfGraduate","setYearOfGraduate","get","then","res","data","createUser","e","preventDefault","formData","FormData","append","post","headers","catch","error","console","log","formatPhoneNumber","cleaned","replace","match","handlePhoneChange","input","target","value","length","validateEmail","re","test","String","toLowerCase","handleEmailChange","setCustomValidity","validatePassword","handlePasswordChange","children","href","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","Control","placeholder","onChange","Group","controlId","Select","files","variant","_c","$RefreshReg$"],"sources":["C:/Users/samah/OneDrive/Desktop/mernproject/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Container,\n  Form,\n  Button,\n} from \"react-bootstrap\";\n\nexport default function App() {\n\n  // URL of the API that this application will use\n  const api = \"http://127.0.0.1:3001\";\n\n  // Set up state variables to hold user data\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [yearOfGraduate, setYearOfGraduate] = useState(\"\");\n\n\n  // Use the useEffect hook to fetch user data when the component mounts\n  useEffect(() => {\n    Axios.get(`${api}/users`).then((res) => {\n      setUsers(res.data);\n    });\n  }, []);\n\n    /*\n  * Handle form submission and create a new user\n  * @param e - Form submit event object\n  */\n  const createUser = (e) => {\n    e.preventDefault();\n    if (name && phone && email) {\n      // Create a new FormData object to hold the form data\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"phone\", phone);\n      formData.append(\"email\", email);\n      formData.append(\"password\", password);\n      formData.append(\"type\", type);\n      if (type === \"student\") {\n        formData.append(\"category\", category);\n      } else if (type === \"graduate\") {\n        formData.append(\"yearOfGraduate\", yearOfGraduate);\n      }\n      formData.append(\"image\", image);\n  \n      // Use Axios to make a POST request to the API with the form data\n      Axios.post(`${api}/createUser`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      })\n        .then((res) => {\n          // Update the users state variable with the new user data\n          setUsers([...users, res.data]);\n          // Reset the form inputs\n          setName(\"\");\n          setEmail(\"\");\n          setPhone(\"\");\n          setPassword(\"\");\n          setType(\"\");\n          setCategory(\"\");\n          setImage(\"\");\n          setYearOfGraduate(\"\");\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n/*----------------------------------Phone-------------------------------------*/\n   /*\n  * Format the phone number as (XXX) XXX-XXXX\n  * @param phone - the phone number to format\n  * @returns a formatted phone number string\n  */\n   const formatPhoneNumber = (phone) => {\n    const cleaned = ('' + phone).replace(/\\D/g, '');\n    const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    return match ? '(' + match[1] + ') ' + match[2] + '-' + match[3] : phone;\n  }\n\n  /*\n  * Handle phone input change and format the phone number\n  * @param e - Input change event object\n  */\n  const handlePhoneChange = (e) => {\n    const input = e.target.value.replace(/\\D/g, '');\n    if (input.length <= 10) {\n      setPhone(formatPhoneNumber(input));\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n/*----------------------------------Email-------------------------------------*/\n  /*\n  * Validate email address format\n  * @param email - the email address to validate\n  * @returns true if the email address is valid, false otherwise\n  */\n  const validateEmail = (email) => {\n    const re = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    return re.test(String(email).toLowerCase());\n  }\n\n  /*\n  * Handle email input change and validate the email address\n  * @param e - Input change event object\n  */\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n    if (!validateEmail(e.target.value)) {\n      e.target.setCustomValidity('Please enter a valid email address');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n/*----------------------------------Password-------------------------------------*/\n  /*\n  * Validate password format\n  * @param password - the password to validate\n  * @returns true if the password is valid, false otherwise\n  */\n  const validatePassword = (password) => {\n    const re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\n    return re.test(String(password));\n  }\n\n  /*\n  * Handle password input change and validate the password\n  * @param e - Input change event object\n  */\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    if (!validatePassword(e.target.value)) {\n      e.target.setCustomValidity('Password must contain at least 8 characters, including uppercase, lowercase, and numbers');\n    } else {\n      e.target.setCustomValidity('');\n    }\n  }\n/*---------------------------------------------------------------------------*/\n\n  return (\n    <>\n      {/* Header section with navigation links */}\n      <header>\n        <nav>\n          <ul>\n            <li>\n              <a href=\"/\">Admin</a>\n            </li>\n            <li>\n              <a href=\"/app\">User</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      {/* Main content section with form to create new user */}\n      <Container>\n        <Form className=\"form\" onSubmit={createUser}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Phone\"\n            value={phone}\n            onChange={handlePhoneChange}\n          />\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n          <Form.Group controlId=\"type\">\n            <Form.Select value={type} onChange={(e) => setType(e.target.value)}>\n              <option value=\"\">Select Type</option>\n              <option value=\"Student\">Student</option>\n              <option value=\"Graduate\">Graduate</option>\n              <option value=\"Employed\">Employed</option>\n            </Form.Select>\n          </Form.Group>\n          <Form.Group controlId=\"image\">\n            <Form.Control type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n          </Form.Group>\n          <Button variant=\"success\" type=\"submit\">\n            Create User\n          </Button>\n        </Form>\n      </Container>\n    </>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}